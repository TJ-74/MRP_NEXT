{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/74run/my-next-app/src/app/api/chat/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { Groq } from 'groq-sdk';\r\n\r\nconst groq = new Groq({\r\n  apiKey: process.env.GROQ_API_KEY,\r\n});\r\n\r\nconst SYSTEM_PROMPT = `You are a Healthcare Price Transparency Assistant for California hospitals. Make your responses short, concise, and to the point.`;\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { messages } = await req.json();\r\n    const lastMessage = messages[messages.length - 1];\r\n\r\n    const completion = await groq.chat.completions.create({\r\n      messages: [\r\n        {\r\n          role: 'system',\r\n          content: SYSTEM_PROMPT,\r\n        },\r\n        {\r\n          role: 'user',\r\n          content: lastMessage.content,\r\n        },\r\n      ],\r\n      model: 'llama-3.1-8b-instant',\r\n      temperature: 0.7,\r\n      max_tokens: 1024,\r\n    });\r\n\r\n    const response = completion.choices[0]?.message?.content || 'I apologize, but I could not generate a response at this time.';\r\n    \r\n    return NextResponse.json({\r\n      message: response,\r\n    });\r\n  } catch (error) {\r\n    console.error('Chat API error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to process chat request' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,OAAO,IAAI,uJAAA,CAAA,OAAI,CAAC;IACpB,QAAQ,QAAQ,GAAG,CAAC,YAAY;AAClC;AAEA,MAAM,gBAAgB,CAAC,iIAAiI,CAAC;AAElJ,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QACnC,MAAM,cAAc,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE;QAEjD,MAAM,aAAa,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACpD,UAAU;gBACR;oBACE,MAAM;oBACN,SAAS;gBACX;gBACA;oBACE,MAAM;oBACN,SAAS,YAAY,OAAO;gBAC9B;aACD;YACD,OAAO;YACP,aAAa;YACb,YAAY;QACd;QAEA,MAAM,WAAW,WAAW,OAAO,CAAC,EAAE,EAAE,SAAS,WAAW;QAE5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiC,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}